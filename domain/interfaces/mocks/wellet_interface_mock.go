// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/repository/wellet_interface_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWelletInterfaceRepository is a mock of WelletInterfaceRepository interface.
type MockWelletInterfaceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWelletInterfaceRepositoryMockRecorder
}

// MockWelletInterfaceRepositoryMockRecorder is the mock recorder for MockWelletInterfaceRepository.
type MockWelletInterfaceRepositoryMockRecorder struct {
	mock *MockWelletInterfaceRepository
}

// NewMockWelletInterfaceRepository creates a new mock instance.
func NewMockWelletInterfaceRepository(ctrl *gomock.Controller) *MockWelletInterfaceRepository {
	mock := &MockWelletInterfaceRepository{ctrl: ctrl}
	mock.recorder = &MockWelletInterfaceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWelletInterfaceRepository) EXPECT() *MockWelletInterfaceRepositoryMockRecorder {
	return m.recorder
}

// CreateWellet mocks base method.
func (m *MockWelletInterfaceRepository) CreateWellet(id_wellet, Id_user string, balance int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWellet", id_wellet, Id_user, balance)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateWellet indicates an expected call of CreateWellet.
func (mr *MockWelletInterfaceRepositoryMockRecorder) CreateWellet(id_wellet, Id_user, balance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWellet", reflect.TypeOf((*MockWelletInterfaceRepository)(nil).CreateWellet), id_wellet, Id_user, balance)
}

// CreditWelletCliente mocks base method.
func (m *MockWelletInterfaceRepository) CreditWelletCliente() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreditWelletCliente")
	ret0, _ := ret[0].(error)
	return ret0
}

// CreditWelletCliente indicates an expected call of CreditWelletCliente.
func (mr *MockWelletInterfaceRepositoryMockRecorder) CreditWelletCliente() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreditWelletCliente", reflect.TypeOf((*MockWelletInterfaceRepository)(nil).CreditWelletCliente))
}

// CreditWelletIVAEbizno mocks base method.
func (m *MockWelletInterfaceRepository) CreditWelletIVAEbizno(amount int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreditWelletIVAEbizno", amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreditWelletIVAEbizno indicates an expected call of CreditWelletIVAEbizno.
func (mr *MockWelletInterfaceRepositoryMockRecorder) CreditWelletIVAEbizno(amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreditWelletIVAEbizno", reflect.TypeOf((*MockWelletInterfaceRepository)(nil).CreditWelletIVAEbizno), amount)
}

// CreditWelletTarifeEbizno mocks base method.
func (m *MockWelletInterfaceRepository) CreditWelletTarifeEbizno(amount int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreditWelletTarifeEbizno", amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreditWelletTarifeEbizno indicates an expected call of CreditWelletTarifeEbizno.
func (mr *MockWelletInterfaceRepositoryMockRecorder) CreditWelletTarifeEbizno(amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreditWelletTarifeEbizno", reflect.TypeOf((*MockWelletInterfaceRepository)(nil).CreditWelletTarifeEbizno), amount)
}

// CreditWelletVendedor mocks base method.
func (m *MockWelletInterfaceRepository) CreditWelletVendedor(amount int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreditWelletVendedor", amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreditWelletVendedor indicates an expected call of CreditWelletVendedor.
func (mr *MockWelletInterfaceRepositoryMockRecorder) CreditWelletVendedor(amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreditWelletVendedor", reflect.TypeOf((*MockWelletInterfaceRepository)(nil).CreditWelletVendedor), amount)
}

// DebitWelletCliente mocks base method.
func (m *MockWelletInterfaceRepository) DebitWelletCliente(amount int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DebitWelletCliente", amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// DebitWelletCliente indicates an expected call of DebitWelletCliente.
func (mr *MockWelletInterfaceRepositoryMockRecorder) DebitWelletCliente(amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DebitWelletCliente", reflect.TypeOf((*MockWelletInterfaceRepository)(nil).DebitWelletCliente), amount)
}

// DebitWelletIVAVendedor mocks base method.
func (m *MockWelletInterfaceRepository) DebitWelletIVAVendedor(amount int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DebitWelletIVAVendedor", amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// DebitWelletIVAVendedor indicates an expected call of DebitWelletIVAVendedor.
func (mr *MockWelletInterfaceRepositoryMockRecorder) DebitWelletIVAVendedor(amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DebitWelletIVAVendedor", reflect.TypeOf((*MockWelletInterfaceRepository)(nil).DebitWelletIVAVendedor), amount)
}

// DebitWelletTarifeVendedor mocks base method.
func (m *MockWelletInterfaceRepository) DebitWelletTarifeVendedor(amount int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DebitWelletTarifeVendedor", amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// DebitWelletTarifeVendedor indicates an expected call of DebitWelletTarifeVendedor.
func (mr *MockWelletInterfaceRepositoryMockRecorder) DebitWelletTarifeVendedor(amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DebitWelletTarifeVendedor", reflect.TypeOf((*MockWelletInterfaceRepository)(nil).DebitWelletTarifeVendedor), amount)
}
